const router = require('express').Router();
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');
const User = require('../models/user.model');

router.post('/register', async (req, res) => {
    try {
        const { username, email, password} = req.body;
        const hashedPassword = await bcrypt.hash(password, 10);
        const newUser = new User({ username, email, password: hashedPassword});
        await newUser.save();
        res.status(201).json({message: 'User created successfully'});
    } catch (error) {
        res.status(400).json({error: error.message});
    }
});

router.post('/login', async (req, res) => {
    try {
        const {email, password} = req.body;
        const user = await User.fondOne({ email});
        if(!user) {
            return res.status(400).json({error: 'User not found'});
        }
        const payload = {id: user.id, username: user.username};
        const token = jwt.sign(payload, process.env.JWT_SECRET, {expiresIn: '1hr'});
        res.json({success: true, token: 'Bearer ' + token});
    } catch (error) {
        res.status(400).json({ error: error.message});
    }
});

module.exports = router;